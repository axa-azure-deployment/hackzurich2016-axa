swagger: '2.0'
info:
  version: 0.9.2
  title: "hackzurich 2016 - AXA Winterthur - insurance API"
  description: |
    AXA Winterthur is Gold sponsor "hackzurich" http://hackzurich.ch in 2016.
    
    > Our topic is __"Insurance as simple as a Game" aka "Clash of claims"__. See more detailed information about the Workshop and the competition  here (TBD)

    ***
    __Data privacy__: all data are examples, partly generated, anonymized and cannot be linked with any existing customer or prospect of AXA. Some data is generated using [Random Point Generator](http://www.geomidpoint.com/random/). 

    ***
    The current API represents the most used domain objects of an insurance. We provide 2 different types: static / configation data and dynamic data, based on 10'000 predefined customers.
    
    __Developers:__ here you can get the full source code, nodejs app and mongodb-load-data from our GIT repo https://github.com/lolo8304/hackzurich2016-axa
    
    __Endpoint:__ use our SaaS REST services running on https://hackzurich16.azurewebsites.net/axa/... (details see swagger documentation)
    
    __Swagger:__ use (this) swagger documentation on https://hackzurich16.azurewebsites.net
    - see our [JSON version](https://hackzurich16.azurewebsites.net/swagger.json) and [YAML version](https://hackzurich16.azurewebsites.net/swagger.yaml)
    - see our special localhost:3000 swagger [YAML version](https://hackzurich16.azurewebsites.net/swagger.local.yaml) and [JSON version](https://hackzurich16.azurewebsites.net/swagger.local.json) to support local development without need of a swagger web distribution

    ***
    __Dynamic data__ (prefilled with examples)
    - **customer data**: most attributes of a customer eg naming, address, date of birth, ... (10'000 customers)
    - **profile data**: important profile data of the customer
    - **contracts**: insurance contracts of the customer
    - **trips**: telmatics data of some real trips, locations and events an (only 7 trips, >25 events, > 650 GPS positions)
    - **transactions**: financial transactions issued to (>1000 transactions)

    __Static / configuration data__
    - **car + truck data**: some vehicle types and attributes, incl CO2 and energy attributes (>1700 cars, >350 trucks)
    - **insurance types**: list of all types of insurances, group by L&S, P&C and health (>20 types)
    - **risk types**: risks possible to be able taken for the customer (>20 risks)
    - **favorite risk object categories**: object categories to describe your favorite object (>20 categories)

host: hackzurich16.azurewebsites.net
#host: localhost:3000

basePath: /axa
definitions:

  ContactResultList:
    description: result of AXA agencies search used for paging
    type: object
    properties:
      data:
        $ref: '#/definitions/Contacts'
      links:
        $ref: '#/definitions/Link'

  ContactOpeningHours:
    type: object
    properties:
      ranges:
       description: key -> value pairs with key=startTime, value=endTime in form hh:mm
       type: object


  Contacts:
    type: array
    items:
      $ref: '#/definitions/Contact'
      
  Contact:
   description: details of AXA agency and its contacts, opening hours
   type: object
   properties:
    _id:
     type: string
    city:
     description: city name 
     type: string
    language:
     description: main language of agency
     type: string
     enum:
      - de
      - fr
      - it
    location:
      $ref: '#/definitions/Location2Dsphere'
    mail:
     description: email address 
     type: string
    name:
     description: public name 
     type: string
    phone:
     description: main contact phone number 
     type: string
    street:
     description: street and no 
     type: string
    zip:
     description: zip code of city
     type: string
    openingHours:
     description: opening hours of agency seperated by day of week
     type: object
     properties:
      days:
       type: object
       properties:
        Mo:
          $ref: '#/definitions/ContactOpeningHours'
        Di:
          $ref: '#/definitions/ContactOpeningHours'
        Mi:
          $ref: '#/definitions/ContactOpeningHours'
        Do:
          $ref: '#/definitions/ContactOpeningHours'
        Fr:
          $ref: '#/definitions/ContactOpeningHours'
        Sa:
          $ref: '#/definitions/ContactOpeningHours'
    agents:
     description: list of agents
     type: array
     items:
      type: object
      properties:
       agentStatus:
        description: position of agent in the agency. ID=Innendienst / internal, AD=Aussendienst
        type: string
        enum:
          - ID
          - AD
       email:
        description: email address to contact agent
        type: string
       firstname:
        description: first name
        type: string
       lastname:
        description: last name
        type: string
       mobile:
        description: mobile phone number
        type: string
       phone:
        description:  phone number
        type: string
    closedOnDays:
     description:  describes the standard closed days of the agency
     type: object
     properties:
      days:
       type: array
       items:
        type: object
        properties:
         event:
          description:  name of event
          type: string
         date:
          description:  date of event
          type: string


  InsuranceTypes:
    type: array
    items:
      $ref: '#/definitions/InsuranceType'

  InsuranceType:
    properties:
      id:
        type: string
        format: integer
        description: id of insurance type
      name:
        type: string
      lineOfBusiness:
        type: string
      description:
        type: string


  CarResultList:
    description: result of cars search used for paging
    type: object
    properties:
      data:
        $ref: '#/definitions/Cars'
      links:
        $ref: '#/definitions/Link'

  Cars:
    type: array
    items:
      $ref: '#/definitions/Car'

  Car:
    properties:
      id:
        type: string
        format: integer
        description: id of car
      brand:
          type: string
      model:
          type: string
      type:
          type: string
      name:
          type: string
      price:
          type: number
          format: integer
      body:
          type: string
      seats:
          type: number
          format: integer
      ccm:
          type: number
          format: integer
      power_KW:
          type: number
          format: integer
      power_PS:
          type: number
          format: float
      gear:
          type: string
      noise:
          type: number
          format: integer
      fuel:
          type: string
      consumption:
          type: number
          format: float
      CO2:
          type: number
          format: integer
      E_class:
          type: string
      P_greenhouse:
          type: number
          format: float
      P_noise:
          type: number
          format: integer
      P_human:
          type: number
          format: float
      P_nature:
          type: number
          format: float
      P_total:
          type: number
          format: float
      stars:
          type: string
      stars_no:
          type: number
          format: integer
      E_label:
          type: string
      E_label_no:
          type: number
          format: integer
      KLASSE:
          type: string


  TruckResultList:
    description: result of trucks search used for paging
    type: object
    properties:
      data:
        $ref: '#/definitions/Trucks'
      links:
        $ref: '#/definitions/Link'

  Trucks:
    type: array
    items:
      $ref: '#/definitions/Truck'

  Truck:
    properties:
      id:
        type: number
        format: integer
      make:
        type: string
      model:
        type: string
      type:
        type: string
      name:
        type: string
      price:
        type: number
        format: integer
      body:
        type: string
      seats:
        type: number
        format: integer
      load_capacity:
        type: number
        format: integer
      ccm:
        type: number
        format: integer
      power_KW:
        type: number
        format: integer
      power_PS:
        type: number
        format: float
      gear:
        type: string
      noise:
        type: number
        format: float
      fuel:
        type: string
      consumption:
        type: number
        format: float
      CO2:
        type: number
        format: integer
      E_class:
        type: string
      P_greenhouse:
        type: number
        format: float
      P_noise:
        type: number
        format: float
      P_human:
        type: number
        format: integer
      P_nature:
        type: number
        format: integer
      P_total:
        type: number
        format: integer
      stars:
        type: string
      stars_no:
        type: number
        format: integer
      E_label:
        type: string
      E_label_no:
        type: number
        format: integer

  Trips:
    type: array
    items:
      $ref: '#/definitions/Trip'

  Trip:
    properties:
      id:
        type: string
        format: integer
        description: id of trip
      data:
        $ref: '#/definitions/TripData'

  TripData:
    properties:
      events:
        $ref: '#/definitions/TripEvents'
      positions:
        $ref: '#/definitions/TripPositions'

  TripPositions:
    properties:
      data:
        description: list of all measured GPS positions in trip
        type: array
        items: 
          $ref: '#/definitions/TripPosition'

  TripPosition:
    description: stored GPS position during trip
    properties:
      id: 
        description: id of position, used as a reference in event
        type: string
        format: integer
      longitude: 
        description: longitude of position
        type: number
        format: float
      latitude: 
        description: latitude of position
        type: number
        format: float

  TripEvents:
    properties:
      lengthUnit:
        description: length unit
        type: string
        enum:
          - Km
          - M
      speedUnit:
        description: speed unit
        type: string
        enum:
          - Km/h
          - M/h
      data:
        description: list of all events in this trip
        type: array
        items: 
          $ref: '#/definitions/TripEvent'

  TripEvent:
    description: captured event during trip, referencing to positions
    properties:
      quality: 
        type: string
        description: information message about signal quality
      id_start: 
        type: string
        description: position reference id of start event
      longitude: 
        description: longitude of event
        type: number
        format: float
      latitude:
        description: latitude of event
        type: number
        format: float
      summary: 
        description: overview description of event
        type: string
      mark_type: 
        type: string
        description: event marker type of event, A=acceleration, V=Speeding, C=Cornering, Driving in curves
        enum:
          - A
          - V
          - C
      id_deviation: 
        type: string
        description: position reference id where deviation took place
      deviation_speed_limit: 
        type: string
        description: speed limit during deviation event
      eventSeverity: 
        type: string
        description: level of event severity, 1=orange, 2=red
        enum:
          - 1
          - 2
      description: 
        description: explanation of event
        type: string
      duration: 
        description: duration of event, in Seconds, Minutes, Hours
        type: string
      deviation_speed: 
        description: deviation to speed limit
        type: string
      time_start: 
        description: start time of event in HH:MM
        type: string
        format: HH:MM
      id_end:
        description: position reference id of end event
        type: string
              
  Transactions:
    type: array
    items:
      $ref: '#/definitions/Transaction'

  Transaction:
    properties:
      _id:
        type: string
        format: integer
        description: id of transaction
      customer:
        type: string
        format: integer
        description: id of customer
      amount:
        type: number
        format: double
        description: amount of transaction in EUR
      date:
        type: string
        format: date
        description: timestamp of transaction
      lineOfBusiness:
        type: string
        format: string
        description: insurance line of business where payment took place
        enum: 
         - P&C
         - L&C
         - Health
      name:
        type: string
        format: string
        description: name of receiver, receiver
      type:
        type: string
        format: string
        description: type of transaction.
        enum: 
         - deposit
         - invoice
         - payment
         - withdrawal
      account:
        type: string
        format: string
        description: account no of receiver


  CustomerResultList:
    description: result of customer search used for paging
    type: object
    properties:
      data:
        $ref: '#/definitions/Customers'
      links:
        $ref: '#/definitions/Link'

  TransactionResultList:
    description: result of transaction search used for paging
    type: object
    properties:
      data:
        $ref: '#/definitions/Transaction'
      links:
        $ref: '#/definitions/Link'

  Customers:
    type: array
    items:
      $ref: '#/definitions/Customer'

  Customer:
    properties:
      id:
        type: string
        format: integer
        description: id of customer
      gender:
        type: string
        description: gender
        enum:
          - male
          - female
      title:
        type: string
        description: additional title of name e.g Dr.
      givenName:
        type: string
        description: first name 
      middleInitial:
        type: string
        description: short initial of middle name
      surname:
        type: string
        description: last name
      streetAddress:
        type: string
        description: address field of location incl number
      city:
        type: string
        description: city of address
      zipCode:
        type: integer
        description: zipcode of city
      country:
        type: string
        description: country ISO code
      countryFull:
        type: string
        description: full description of country based on ISO country code
      emailAddress:
        type: string
        description: primary email address
      username:
        type: string
        description: primary user name
      password:
        type: string
        description: visibile password. Just for testing purposes
      telephoneNumber:
        type: string
        description: primary phone number in local format. including prefix 0
      telephoneCountryCode:
        type: string
        description: country code of primary phone number without leading 00 or +
      birthday:
        type: string
        description: date of birth in form yyyy-mm-dd
      age:
        type: integer
        description: calculated date based on year 2016. only for tests - not dynamic
      occupation:
        type: string
        description: endlish expression of job title
      company:
        type: string
        description: name of company
      vehicle:
        type: string
        description: name of car vehicle type
      kilograms:
        type: integer
        description: current weight of customer at 16.9.2016, hackzurich
      centimeters:
        type: integer
        description: body height in cm
      location:
        $ref: '#/definitions/Location2Dsphere'
            
  Location2Dsphere:
    title: Spherical 2D location
    description: Location structure of 2D spherical point positioning with long and lat
    properties:
      type:
        description: type of 2D representation. here always point
        default: 
          "Point"
        type: string
        enum:
          - Point
      coordinate:
        description: array of 2 integer values with longitude and latitude
        type: array
        items:
          type: number
          format: double

  Link:
    title: navigation links of result lists
    properties:
      cur:
        type: string
        description: URL of the current page request. including needed skip + limit parameters
      first:
        type: string
        description: URL for first paging call
      prev:
        type: string
        description: URL for prev paging call. Can be null if no prev possible, because already on first page
      next:
        type: string
        description: URL for next paging call. Can be null if no next possible, because already on last page
      last:
        type: string
        description: URL for last paging call
      count:
        type: number
        format: integer
        description: nof of results in this page. Always <= limit
      totalCount:
        type: number
        format: integer
        description: total count of results for query
paths:

  /customers:
    get:
      summary: list of all customers, use ranges
      description: |
        get all customers using. max limit 25, using skip + limit to range
      tags:
        - Customer
        - Customer search
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
            
  /customers/search/byZip/{zip}:
    get:
      summary: search customers by zip code, use ranges
      description: |
        search all customers at their location by zip, using. max limit 25, using skip + limit to range
      parameters:
        - name: zip
          in: path
          description: zip code of location
          required: true
          type: integer
          format: integer
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Customer search
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
        '400':
          description: invalid zip parameter
        '500':
          description: technical server error

  /customers/search/byName/{name}:
    get:
      summary: search customers by lastname or firstname, using *wildcards*, use ranges
      description: |
        search all customers by their lastname or firstname using wildcards automatically, using. max limit 25, using skip + limit to range
      parameters:
        - name: name
          in: path
          description: part of name (first or last)
          required: true
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Customer search
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
        '400':
          description: invalid name parameter
        '500':
          description: technical server error

  /customers/search/byWord/{text}:
    get:
      summary: search customers by any word in all indexed fields, use ranges
      description: |
        search all customers by any word in all indexed fields using full text search. Splitted words with blanks used as OR operator. using max limit 25, using skip + limit to range
      parameters:
        - name: text
          in: path
          description: word to search
          required: true
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Customer search
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
        '400':
          description: invalid text parameter
        '500':
          description: technical server error
          
  /customers/search/byQuery/{query}/{sort}:
    get:
      summary: search customers using mongodb query, use ranges
      description: |
        search all customers using a mongodb query in JSON format - see http://bit.ly/2aI9Djk, using. max limit 25, using skip + limit to range
      parameters:
        - name: query
          in: path
          description: mongodb query in JSON format - see http://bit.ly/2aI9Djk
          required: true
          default: '{ "kilograms" : 100 }'
          type: string
          format: string
        - name: sort
          in: path
          description: sort column in JSON format, use id as default - see http://bit.ly/2aIaK2I
          required: true
          default: '{"id" : 1}'
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Customer search
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error

  /customers/search/near/{longitude},{latitude},{meter}:
    get:
      summary: search nearest customers in meter to a given location, use ranges
      description: |
        search nearest customers in meter to a given location. max limit 25, using skip + limit to range
      parameters:
        - name: longitude 
          in: path
          description: longitude of given location to search
          required: true
          type: number
          default: 46.731947
          format: double
        - name: latitude
          in: path
          description: latitude of given location to search
          required: true
          type: number
          default: 6.962926
          format: double
        - name: meter
          in: path
          description: define nearest area to location in meter
          required: true
          default: 1000
          type: number
          format: integer
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Customer search
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CustomerResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error


  /customers/{id}:
    get:
      summary: get customer with id
      description: |
        get all attributes of a customer based on id
      parameters:
        - name: id
          in: path
          description: id of customer
          required: true
          type: string
          format: integer
      tags:
        - Customer
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Customer'
        '404':
          description: customer not found
        '500':
          description: technical server error
          
  /customers/{id}/trips:
    get:
      summary: get all telematic trips and events of the customer
      description: |
        get all telematics events and positioning information of the customers trips
      parameters:
        - name: id
          in: path
          description: id of customer
          required: true
          type: string
          format: integer
      tags:
        - Customer
        - Trip
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Trips'
        '404':
          description: customer not found
        '500':
          description: technical server error
          
  /customers/{id}/transactions:
    get:
      summary: get some financial transactions of this customer
      description: |
        get all financial transactions of this customer
      parameters:
        - name: id
          in: path
          description: id of customer
          required: true
          type: string
          format: integer
      tags:
        - Customer
        - Transaction
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Transactions'
        '404':
          description: customer not found
        '500':
          description: technical server error

  /transactions:
    get:
      summary: get all financial transactions 
      description: |
        get all financial transactions. max limit 25, using skip + limit to range
      tags:
        - Transaction
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransactionResultList'
            
  /transactions/search/byQuery/{query}/{sort}:
    get:
      summary: search transactions using mongodb query, use ranges
      description: |
        search all transactions using a mongodb query in JSON format - see http://bit.ly/2aI9Djk, using. max limit 25, using skip + limit to range
      parameters:
        - name: query
          in: path
          description: mongodb query in JSON format - see http://bit.ly/2aI9Djk
          required: true
          default: '{ "type" : "invoice" }'
          type: string
          format: string
        - name: sort
          in: path
          description: sort column in JSON format, use id as default - see http://bit.ly/2aIaK2I
          required: true
          default: '{"amount" : -1}'
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Transaction
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TransactionResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error


  /trips:
    get:
      summary: get all telematic trips and events
      description: |
        get all telematics events and positioning information of all trips
      tags:
        - Trip
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Trips'

  /cars:
    get:
      summary: get all cars
      description: |
        get all cars including CO2, E scores
      tags:
        - Static
        - Car
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CarResultList'

  /cars/search/byWord/{text}:
    get:
      summary: search cars by any word in all indexed fields, use ranges
      description: |
        search all cars by any word in all indexed fields using full text search. Splitted words with blanks used as OR operator. using max limit 25, using skip + limit to range
      parameters:
        - name: text
          in: path
          description: word to search
          required: true
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Car
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CarResultList'
        '400':
          description: invalid text parameter
        '500':
          description: technical server error


  /cars/search/byQuery/{query}/{sort}:
    get:
      summary: search cars using mongodb query, use ranges
      description: |
        search all cars using a mongodb query in JSON format - see http://bit.ly/2aI9Djk, using. max limit 25, using skip + limit to range
      parameters:
        - name: query
          in: path
          description: mongodb query in JSON format - see http://bit.ly/2aI9Djk
          required: true
          default: '{ "fuel" : "Benzin" }'
          type: string
          format: string
        - name: sort
          in: path
          description: sort column in JSON format, use id as default - see http://bit.ly/2aIaK2I
          required: true
          default: '{"id" : 1}'
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Car
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/CarResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error

  /trucks:
    get:
      summary: get all trucks
      description: |
        get all trucks including CO2, E scores
      tags:
        - Static
        - Car
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TruckResultList'



  /trucks/search/byWord/{text}:
    get:
      summary: search trucks by any word in all indexed fields, use ranges
      description: |
        search all trucks by any word in all indexed fields using full text search. Splitted words with blanks used as OR operator. using max limit 25, using skip + limit to range
      parameters:
        - name: text
          in: path
          description: word to search
          required: true
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Car
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TruckResultList'
        '400':
          description: invalid text parameter
        '500':
          description: technical server error


  /trucks/search/byQuery/{query}/{sort}:
    get:
      summary: search trucks using mongodb query, use ranges
      description: |
        search all trucks using a mongodb query in JSON format - see http://bit.ly/2aI9Djk, using. max limit 25, using skip + limit to range
      parameters:
        - name: query
          in: path
          description: mongodb query in JSON format - see http://bit.ly/2aI9Djk
          required: true
          default: '{ "body" : "Pickup" }'
          type: string
          format: string
        - name: sort
          in: path
          description: sort column in JSON format, use id as default - see http://bit.ly/2aIaK2I
          required: true
          default: '{"id" : 1}'
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Car
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TruckResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error



  /insuranceTypes:
    get:
      summary: get list of all types of insuance
      description: |
        get all types of insurance
      tags:
        - Static
        - Contract
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/InsuranceTypes'







  /contacts:
    get:
      summary: list of all AXA agencies and contacts, use ranges
      description: |
        get all AXA agencies and contacts using. max limit 25, using skip + limit to range
      tags:
        - Contact
        - Static
      parameters:
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer

      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactResultList'
            
  /contacts/search/byZip/{zip}:
    get:
      summary: search AXA agencies and contacts by zip code, use ranges
      description: |
        search all customers at their location by zip, using. max limit 25, using skip + limit to range
      parameters:
        - name: zip
          in: path
          description: zip code of location
          required: true
          type: integer
          format: integer
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Contact
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactResultList'
        '400':
          description: invalid zip parameter
        '500':
          description: technical server error

  /contacts/search/byWord/{text}:
    get:
      summary: search AXA agencies and contacts by any word in all indexed fields, use ranges
      description: |
        search all AXA agencies and contacts by any word in all indexed fields using full text search. Splitted words with blanks used as OR operator. using max limit 25, using skip + limit to range
      parameters:
        - name: text
          in: path
          description: word to search
          required: true
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Contact
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactResultList'
        '400':
          description: invalid text parameter
        '500':
          description: technical server error
          
  /contacts/search/byQuery/{query}/{sort}:
    get:
      summary: search AXA agencies and contacts using mongodb query, use ranges
      description: |
        search all AXA agencies and contacts using a mongodb query in JSON format - see http://bit.ly/2aI9Djk, using. max limit 25, using skip + limit to range
      parameters:
        - name: query
          in: path
          description: mongodb query in JSON format - see http://bit.ly/2aI9Djk
          required: true
          default: '{ "kilograms" : 100 }'
          type: string
          format: string
        - name: sort
          in: path
          description: sort column in JSON format, use id as default - see http://bit.ly/2aIaK2I
          required: true
          default: '{"id" : 1}'
          type: string
          format: string
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Contact
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error

  /contacts/search/near/{longitude},{latitude},{meter}:
    get:
      summary: search nearest AXA agencies in meter to a given location, use ranges
      description: |
        search nearest AXA agencies in meter to a given location. max limit 25, using skip + limit to range
      parameters:
        - name: longitude 
          in: path
          description: longitude of given location to search
          required: true
          type: number
          default: 46.731947
          format: double
        - name: latitude
          in: path
          description: latitude of given location to search
          required: true
          type: number
          default: 6.962926
          format: double
        - name: meter
          in: path
          description: define nearest area to location in meter
          required: true
          default: 20000
          type: number
          format: integer
        - name: skip
          in: query
          description: nof items skipped in result. Default = 0. Used with limit for paging
          required: false
          type: integer
          format: integer
        - name: limit
          in: query
          description: limit no of responses. Default = 10. Used with skip for paging
          required: false
          type: integer
          format: integer
      tags:
        - Contact
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ContactResultList'
        '400':
          description: invalid query parameter
        '500':
          description: technical server error


  /contacts/{id}:
    get:
      summary: get AXA agencies and contacts with id
      description: |
        get all attributes of a AXA agencies and contacts based on id
      parameters:
        - name: id
          in: path
          description: id of contact
          required: true
          type: string
          format: integer
      tags:
        - Contact
        - Static
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Contact'
        '404':
          description: customer not found
        '500':
          description: technical server error

